# con el supuesto de probabilidades proporcionales
# Por ambos criterios nos quedamos con el modelo ordinal
# con el supuesto de probabilidades proporcionales
# Por ambos criterios nos quedamos con el modelo ordinal
# con el supuesto de probabilidades proporcionales
# Por ambos criterios nos quedamos con el modelo ordinal
# con el supuesto de probabilidades proporcionales
# Por ambos criterios nos quedamos con el modelo ordinal
# con el supuesto de probabilidades proporcionales
# Por ambos criterios nos quedamos con el modelo ordinal
# con el supuesto de probabilidades proporcionales
# Por ambos criterios nos quedamos con el modelo ordinal
# con el supuesto de probabilidades proporcionales
# Por ambos criterios nos quedamos con el modelo ordinal
# con el supuesto de probabilidades proporcionales
# Por ambos criterios nos quedamos con el modelo ordinal
# con el supuesto de probabilidades proporcionales
# Por ambos criterios nos quedamos con el modelo ordinal
# con el supuesto de probabilidades proporcionales
# Por ambos criterios nos quedamos con el modelo ordinal
# con el supuesto de probabilidades proporcionales
# Por ambos criterios nos quedamos con el modelo ordinal
# con el supuesto de probabilidades proporcionales
# Por ambos criterios nos quedamos con el modelo ordinal
# con el supuesto de probabilidades proporcionales
# Por ambos criterios nos quedamos con el modelo ordinal
# con el supuesto de probabilidades proporcionales
rm(list = ls(all.names = TRUE))
gc()
#--------------------------------------*----------------------------------------
#------------------------------- Ejercicio 3 -----------------------------------
#------------------------ Modelos Lineales Generalizados -----------------------
#------------------------------ datos binarios  --------------------------------
#--------------------------------------*----------------------------------------
library(tidyverse)
datos <- read.csv("Preg3B.csv", header = TRUE)
summary(datos) # estadisticas de las variables
str(datos) # Vistazo del dataframe
#Convertimos a tipo factor la variable Insecticide y Deposit
datos$Insecticide <- factor(datos$Insecticide) # 3 niveles (A,B,C) 6 obs de cada una
datos$Deposit <- factor(datos$Deposit) # 6 niveles (2, 2.64, 3.48, 4.59, 6.06, 8) 3 obs de cada una
datos$propkilled <- with(datos, Killed/Number)
summary(datos)
#Datos agrupados forma 1
n <- c(3, 50-3, 5, 49-5, 19, 47-19, 19, 38-19, 24, 29-24, 35, 50-35,
2, 50-2, 14, 49-14, 20, 50-20, 27, 50-27, 41, 50-41, 40, 50-40,
28, 50-28, 37, 50-37, 46, 50-46, 48, 50-48, 48, 50-48, 50, 50-50)
Y <- c("Yes","No","Yes","No","Yes","No","Yes","No","Yes","No","Yes","No",
"Yes","No","Yes","No","Yes","No","Yes","No","Yes","No","Yes","No",
"Yes","No","Yes","No","Yes","No","Yes","No","Yes","No","Yes","No")
Z <- c("2.00","2.00", "2.64","2.64", "3.48","3.48","4.59","4.59","6.06","6.06","8.00","8.00",
"2.00","2.00", "2.64","2.64", "3.48","3.48","4.59","4.59","6.06","6.06","8.00","8.00",
"2.00","2.00", "2.64","2.64", "3.48","3.48","4.59","4.59","6.06","6.06","8.00","8.00")
X <- c("A","A","A","A","A","A","A","A","A","A","A","A",
"B","B","B","B","B","B","B","B","B","B","B","B",
"C","C","C","C","C","C","C","C","C","C","C","C")
datosAg1 <- data.frame(cbind(n,Y,Z,X))
datosAg1[sapply(datosAg1, is.character)] <- lapply(datosAg1[sapply(datosAg1, is.character)],
as.factor)
datosAg1$n <- as.numeric(as.character(datosAg1$n))
summary(datosAg1)
head(datosAg1)
#Datos desagrupados (más común en la práctica)
Datos <- as.data.frame(lapply(datosAg1, rep, datosAg1$n))
Datos$ID <- seq.int(nrow(Datos))
Datos <- Datos[ , c(5,1,2,3,4)]
head(Datos)
summary(Datos)
#Graficamos
library(lessR)
Datos$ZX <- factor(paste(Datos$Z,Datos$X, sep="."))
summary(Datos)
varx <- Datos$ZX
varby <- Datos$Y
b <- BarChart(x = varx, by = varby, stack100 = TRUE) # la de las notas pagina 30
ggplot(data = datos, mapping = aes(x = Deposit, y = propkilled, group=Insecticide)) +
geom_point(size=5,alpha = 1, aes(color = Insecticide)) +
geom_line(size=3, alpha = 1, aes(color = Insecticide)) +
ggtitle("Letalidad de insecticidas en diferentes dosis") +
ylab("Proporción de mosquitos muertos") +
xlab("Dosis (mg)")
#-------------- Busqueda y seleccion del modelo -----------------
Datos$lnD <- sapply(as.numeric(as.character(Datos$Z)), log)
power <- function(x){x^2}
Datos$lnD2 <- sapply(as.numeric(as.character(Datos$lnD)), power)
head(Datos)
summary(Datos)
#Ajustamos los modelos completos con covariables X=Insecticida y lnD=ln(Deposit)
fitlogit1 <- glm( I(Y == "Yes") ~ X * lnD,
family = binomial(link="logit"),
data = Datos)
summary(fitlogit1) # AIC: 789.44
fitprobit1 <- glm( I(Y == "Yes") ~ X * lnD,
family = binomial(link="probit"),
data = Datos)
summary(fitprobit1) # AIC: 789.28
fitcll1 <- glm( I(Y == "Yes") ~ X * lnD,
family = binomial(link="cloglog"),
data = Datos)
summary(fitcll1) # AIC: 800.46
#----------Ajustamos los modelos completos como antes agregando lnD^2
fitlogit2 <- glm( I(Y == "Yes") ~ X * lnD + X * lnD2,
family = binomial(link="logit"),
data = Datos)
summary(fitlogit2) # AIC: 786.61
fitprobit2 <- glm( I(Y == "Yes") ~ X * lnD + X * lnD2,
family = binomial(link="probit"),
data = Datos)
summary(fitprobit2) # AIC: 786.92
fitcll2 <- glm( I(Y == "Yes") ~ X * lnD + X * lnD2,
family = binomial(link="cloglog"),
data = Datos)
summary(fitcll2) # AIC: 786.06
# ----------- VERIFICACION DE SUPUESTOS ----------------------------------------
library(statmod)
fitcll2qr <- qresid(fitcll2) #Notar que estos son diferentes a los del
#panel de arriba, incluye cierta aleatorización
#para datos binarios
qqnorm(fitcll2qr, las = 1)
qqline(fitcll2qr, col="red") # notamos que si hay normalidad
nortest::lillie.test(fitcll2qr) # No rechaza, es buena noticia
shapiro.test(fitcll2qr) # No rechaza, es buena noticia
library(DHARMa)  #Los residuales simulados también son útiles en este caso
set.seed(123)
fitlogitres <- simulateResiduals(fittedModel = fitcll2)
#minuto 38:45
plot(fitlogitres)  #Aquí no tenemos variables continuas,
library(statmod)
summary(fitcll2)
fitcll2$coefficients
log(exp(1))
fitcll2$coefficients[0]
fitcll2$coefficients[1]
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
#--------- Estimaciones y Pruebas de Hipotesis ---------------------------------
#-------------------------------------------------------------------------------
# Con fines de continuar el ejercicio suponemos que
# fitcll2 es el mejor modelo por tener menor AIC
summary(Datos)
1-exp(-exp(fitcll2$coefficients[1]+fitcll2$coefficients[4]*0.6931472+fitcll2$coefficients[5]*0.4804530))
1-exp(-exp(fitcll2$coefficients[1]))
1-exp(-exp(fitcll2$coefficients[1][1]))
1-exp(-exp(fitcll2$coefficients[1][2]))
1-exp(-exp(fitcll2$coefficients[1][0]))
1-exp(-exp(fitcll2$coefficients[2]))
1-exp(-exp(-8.123154 + 8.598638 * 0.6931472 + -2.197872 * 0.4804530))
summary(fitcll2)
1-exp(-(c^fitcll2$coefficients[4])*exp(fitcll2$coefficients[5]*log(c)^2+1))
c^fitcll2$coefficients[4]
c <- 2
1-exp(-(c^fitcll2$coefficients[4])*exp(fitcll2$coefficients[5]*log(c)^2+1))
1-exp(-(c^fitcll2$coefficients[4])*exp(fitcll2$coefficients[5]*log(c)^2+1))
c^fitcll2$coefficients[4]
fitcll2$coefficients[4]
2^8.598638
fitcll2$coefficients[5]*log(c)^2+1
fitcll2$coefficients[5]
log(2)
log(2)^2
log(2)^2+1
-2.197872 *0.480453
-1.055974+1
exp(-0.055974)
387.6573*0.9455637
exp(-366.5547)
ggplot(data = datos, mapping = aes(x = Deposit, y = propkilled, group=Insecticide)) +
geom_point(size=5,alpha = 1, aes(color = Insecticide)) +
geom_line(size=3, alpha = 1, aes(color = Insecticide)) +
ggtitle("Letalidad de insecticidas en diferentes dosis") +
ylab("Proporción de mosquitos muertos") +
xlab("Dosis (mg)")
c <- 7.02
1-exp(-c^fitcll2$coefficients[4]*exp(fitcll2$coefficients[5]*log(c)^2+1))
c <- 0
1-exp(-c^fitcll2$coefficients[4]*exp(fitcll2$coefficients[5]*log(c)^2+1))
c <- 8
1-exp(-c^fitcll2$coefficients[4]*exp(fitcll2$coefficients[5]*log(c)^2+1))
c <- 1000
1-exp(-c^fitcll2$coefficients[4]*exp(fitcll2$coefficients[5]*log(c)^2+1))
c <- 3
1-exp(-c^fitcll2$coefficients[4]*exp(fitcll2$coefficients[5]*log(c)^2+1))
options(digits=4)
c <- 3
1-exp(-c^fitcll2$coefficients[4]*exp(fitcll2$coefficients[5]*log(c)^2+1))
( x<-1-exp(-c^fitcll2$coefficients[4]*exp(fitcll2$coefficients[5]*log(c)^2+1)) )
c <- 1
c <- 8
( x<-1-exp(-c^fitcll2$coefficients[4]*exp(fitcll2$coefficients[5]*log(c)^2+1)) )
c <- 1
( x<-1-exp(-c^fitcll2$coefficients[4]*exp(fitcll2$coefficients[5]*log(c)^2+1)) )
c <- -75
c <- .7
( x<-1-exp(-c^fitcll2$coefficients[4]*exp(fitcll2$coefficients[5]*log(c)^2+1)) )
c <- .702
( x<-1-exp(-c^fitcll2$coefficients[4]*exp(fitcll2$coefficients[5]*log(c)^2+1)) )
c <- .326
( x<-1-exp(-c^fitcll2$coefficients[4]*exp(fitcll2$coefficients[5]*log(c)^2+1)) )
c <- .03
( x<-1-exp(-c^fitcll2$coefficients[4]*exp(fitcll2$coefficients[5]*log(c)^2+1)) )
c <- .5
( x<-1-exp(-c^fitcll2$coefficients[4]*exp(fitcll2$coefficients[5]*log(c)^2+1)) )
c <- .9
( x<-1-exp(-c^fitcll2$coefficients[4]*exp(fitcll2$coefficients[5]*log(c)^2+1)) )
c <- 2
( x<-1-exp(-c^fitcll2$coefficients[4]*exp(fitcll2$coefficients[5]*log(c)^2+fitcll2$coefficients[1])) )
c <- 7.02
( x<-1-exp(-c^fitcll2$coefficients[4]*exp(fitcll2$coefficients[5]*log(c)^2+fitcll2$coefficients[1])) )
base <- ggplot() + xlim(-5, 5)
base + geom_function(fun = propA)
propA <- function(x) 1-exp(-c^fitcll2$coefficients[4]*exp(fitcll2$coefficients[5]*log(c)^2+fitcll2$coefficients[1]))
base <- ggplot() + xlim(-5, 5)
base + geom_function(fun = propA)
base <- ggplot() + xlim(2,8)
base + geom_function(fun = propA)
propA <- function(x) 1-exp(-c^fitcll2$coefficients[4]*exp(fitcll2$coefficients[5]*log(c)^2+fitcll2$coefficients[1]))
base <- ggplot() + xlim(2,8)
base + geom_function(fun = propA)
propA <- function(C) 1-exp(-c^fitcll2$coefficients[4]*exp(fitcll2$coefficients[5]*log(c)^2+fitcll2$coefficients[1]))
propA <- function(c) 1-exp(-c^fitcll2$coefficients[4]*exp(fitcll2$coefficients[5]*log(c)^2+fitcll2$coefficients[1]))
base <- ggplot() + xlim(2,8)
base + geom_function(fun = propA)
ggplot(data = datos, mapping = aes(x = Deposit, y = propkilled, group=Insecticide)) +
geom_point(size=5,alpha = 1, aes(color = Insecticide)) +
geom_line(size=3, alpha = 1, aes(color = Insecticide)) +
ggtitle("Letalidad de insecticidas en diferentes dosis") +
ylab("Proporción de mosquitos muertos") +
xlab("Dosis (mg)")
ggplot(data = datos, mapping = aes(x = Deposit, y = propkilled, group=Insecticide)) +
geom_point(size=5,alpha = 1, aes(color = Insecticide)) +
geom_line(size=3, alpha = 1, aes(color = Insecticide)) +
ggtitle("Letalidad de insecticidas en diferentes dosis") +
ylab("Proporción de mosquitos muertos") +
xlab("Dosis (mg)") +
geom_function(fun = propA)
propC <- function(c) 1-exp(-c^(fitcll2$coefficients[4]+fitcll2$coefficients[7])*exp((fitcll2$coefficients[5]+fitcll2$coefficients[9])*log(c)^2+fitcll2$coefficients[1]+fitcll2$coefficients[3])
propC <- function(c) 1-exp(-c^(fitcll2$coefficients[4]+fitcll2$coefficients[7])*exp((fitcll2$coefficients[5]+fitcll2$coefficients[9])*log(c)^2+fitcll2$coefficients[1]+fitcll2$coefficients[3]))
1-exp(-c^(fitcll2$coefficients[4]+fitcll2$coefficients[7])*exp((fitcll2$coefficients[5]+fitcll2$coefficients[9])*log(c)^2+fitcll2$coefficients[1]+fitcll2$coefficients[3])
}
b1 <- fitcll2$coefficients[1]
b2 <- fitcll2$coefficients[2]
b3 <- fitcll2$coefficients[3]
b4 <- fitcll2$coefficients[4]
b5 <- fitcll2$coefficients[5]
b6 <- fitcll2$coefficients[6]
b7 <- fitcll2$coefficients[7]
b8 <- fitcll2$coefficients[8]
b9 <- fitcll2$coefficients[9]
propC <- function(x) 1 - exp(x^(b4+b7) * (-exp(b1 + b3 + (b5+b9)*log(x)^2 )))
ggplot(data = datos, mapping = aes(x = Deposit, y = propkilled, group=Insecticide)) +
geom_point(size=5,alpha = 1, aes(color = Insecticide)) +
geom_line(size=3, alpha = 1, aes(color = Insecticide)) +
ggtitle("Letalidad de insecticidas en diferentes dosis") +
ylab("Proporción de mosquitos muertos") +
xlab("Dosis (mg)") +
geom_function(fun = propA) +
geom_function(fun = propC)
propA <- function(x) 1-exp(x^b4*(-exp(b1 + b5*log(x)^2)))
propB <- function(x) 1 - exp(x^(b4+b6) * (-exp(b1 + b2 + (b5+b8)*log(x)^2 )))
propC <- function(x) 1 - exp(x^(b4+b7) * (-exp(b1 + b3 + (b5+b9)*log(x)^2 )))
ggplot(data = datos, mapping = aes(x = Deposit, y = propkilled, group=Insecticide)) +
geom_point(size=5,alpha = 1, aes(color = Insecticide)) +
geom_line(size=3, alpha = 1, aes(color = Insecticide)) +
ggtitle("Letalidad de insecticidas en diferentes dosis") +
ylab("Proporción de mosquitos muertos") +
xlab("Dosis (mg)") +
geom_function(fun = propA, colour = "red") +
geom_function(fun = propB, colour = "green") +
geom_function(fun = propC, colour = "blue")
# Grafica de proporcion de insectos muertos
ggplot(data = datos, mapping = aes(x = Deposit, y = propkilled, group=Insecticide)) +
geom_point(size=5,alpha = 1, aes(color = Insecticide)) +
geom_line(size=3, alpha = 1, aes(color = Insecticide)) +
ggtitle("Letalidad de insecticidas en diferentes dosis") +
ylab("Proporción de mosquitos muertos") +
xlab("Dosis (mg)") +
geom_function(fun = propA, colour = "red", size=3) +
geom_function(fun = propB, colour = "green", size=3) +
geom_function(fun = propC, colour = "blue", size=3)
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
#--------- Estimaciones y Pruebas de Hipotesis ---------------------------------
#-------------------------------------------------------------------------------
# Con fines de continuar el ejercicio suponemos que
# fitcll2 es el mejor modelo por tener menor AIC
fit <- fitcll2
summary(fit)
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
#--------- Estimaciones y Pruebas de Hipotesis ---------------------------------
#-------------------------------------------------------------------------------
# Con fines de continuar el ejercicio suponemos que
# fitcll2 es el mejor modelo por tener menor AIC
fit <- fitcll2
summary(Datos)
summary(fit)
options(digits=4)
rm(list = ls(all.names = TRUE))
gc()
#--------------------------------------*----------------------------------------
#------------------------------- Ejercicio 3 -----------------------------------
#------------------------ Modelos Lineales Generalizados -----------------------
#------------------------------ datos binarios  --------------------------------
#--------------------------------------*----------------------------------------
library(tidyverse)
datos <- read.csv("Preg3B.csv", header = TRUE)
summary(datos) # estadisticas de las variables
str(datos) # Vistazo del dataframe
#Convertimos a tipo factor la variable Insecticide y Deposit
datos$Insecticide <- factor(datos$Insecticide) # 3 niveles (A,B,C) 6 obs de cada una
datos$Deposit <- factor(datos$Deposit) # 6 niveles (2, 2.64, 3.48, 4.59, 6.06, 8) 3 obs de cada una
datos$propkilled <- with(datos, Killed/Number)
summary(datos)
#Datos agrupados forma 1
n <- c(3, 50-3, 5, 49-5, 19, 47-19, 19, 38-19, 24, 29-24, 35, 50-35,
2, 50-2, 14, 49-14, 20, 50-20, 27, 50-27, 41, 50-41, 40, 50-40,
28, 50-28, 37, 50-37, 46, 50-46, 48, 50-48, 48, 50-48, 50, 50-50)
Y <- c("Yes","No","Yes","No","Yes","No","Yes","No","Yes","No","Yes","No",
"Yes","No","Yes","No","Yes","No","Yes","No","Yes","No","Yes","No",
"Yes","No","Yes","No","Yes","No","Yes","No","Yes","No","Yes","No")
Z <- c("2.00","2.00", "2.64","2.64", "3.48","3.48","4.59","4.59","6.06","6.06","8.00","8.00",
"2.00","2.00", "2.64","2.64", "3.48","3.48","4.59","4.59","6.06","6.06","8.00","8.00",
"2.00","2.00", "2.64","2.64", "3.48","3.48","4.59","4.59","6.06","6.06","8.00","8.00")
X <- c("A","A","A","A","A","A","A","A","A","A","A","A",
"B","B","B","B","B","B","B","B","B","B","B","B",
"C","C","C","C","C","C","C","C","C","C","C","C")
datosAg1 <- data.frame(cbind(n,Y,Z,X))
datosAg1[sapply(datosAg1, is.character)] <- lapply(datosAg1[sapply(datosAg1, is.character)],
as.factor)
datosAg1$n <- as.numeric(as.character(datosAg1$n))
summary(datosAg1)
head(datosAg1)
#Datos desagrupados (más común en la práctica)
Datos <- as.data.frame(lapply(datosAg1, rep, datosAg1$n))
Datos$ID <- seq.int(nrow(Datos))
Datos <- Datos[ , c(5,1,2,3,4)]
head(Datos)
summary(Datos)
#Graficamos
library(lessR)
Datos$ZX <- factor(paste(Datos$Z,Datos$X, sep="."))
summary(Datos)
varx <- Datos$ZX
varby <- Datos$Y
b <- BarChart(x = varx, by = varby, stack100 = TRUE) # la de las notas pagina 30
ggplot(data = datos, mapping = aes(x = Deposit, y = propkilled, group=Insecticide)) +
geom_point(size=5,alpha = 1, aes(color = Insecticide)) +
geom_line(size=3, alpha = 1, aes(color = Insecticide)) +
ggtitle("Letalidad de insecticidas en diferentes dosis") +
ylab("Proporción de mosquitos muertos") +
xlab("Dosis (mg)") +
geom_function(fun = propA, colour = "red") +
geom_function(fun = propB, colour = "green") +
geom_function(fun = propC, colour = "blue")
#-------------- Busqueda y seleccion del modelo -----------------
Datos$lnD <- sapply(as.numeric(as.character(Datos$Z)), log)
power <- function(x){x^2}
Datos$lnD2 <- sapply(as.numeric(as.character(Datos$lnD)), power)
head(Datos)
summary(Datos)
#Ajustamos los modelos completos con covariables X=Insecticida y lnD=ln(Deposit)
fitlogit1 <- glm( I(Y == "Yes") ~ X * lnD,
family = binomial(link="logit"),
data = Datos)
summary(fitlogit1) # AIC: 789.44
fitprobit1 <- glm( I(Y == "Yes") ~ X * lnD,
family = binomial(link="probit"),
data = Datos)
summary(fitprobit1) # AIC: 789.28
fitcll1 <- glm( I(Y == "Yes") ~ X * lnD,
family = binomial(link="cloglog"),
data = Datos)
summary(fitcll1) # AIC: 800.46
#----------Ajustamos los modelos completos como antes agregando lnD^2
fitlogit2 <- glm( I(Y == "Yes") ~ X * lnD + X * lnD2,
family = binomial(link="logit"),
data = Datos)
summary(fitlogit2) # AIC: 786.61
fitprobit2 <- glm( I(Y == "Yes") ~ X * lnD + X * lnD2,
family = binomial(link="probit"),
data = Datos)
summary(fitprobit2) # AIC: 786.92
fitcll2 <- glm( I(Y == "Yes") ~ X * lnD + X * lnD2,
family = binomial(link="cloglog"),
data = Datos)
summary(fitcll2) # AIC: 786.06
# ----------- VERIFICACION DE SUPUESTOS ----------------------------------------
library(statmod)
fitcll2qr <- qresid(fitcll2) #Notar que estos son diferentes a los del
#panel de arriba, incluye cierta aleatorización
#para datos binarios
qqnorm(fitcll2qr, las = 1)
qqline(fitcll2qr, col="red") # notamos que si hay normalidad
nortest::lillie.test(fitcll2qr) # No rechaza, es buena noticia
shapiro.test(fitcll2qr) # No rechaza, es buena noticia
library(DHARMa)  #Los residuales simulados también son útiles en este caso
set.seed(123)
fitlogitres <- simulateResiduals(fittedModel = fitcll2)
#minuto 38:45
plot(fitlogitres)  #Aquí no tenemos variables continuas,
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
#--------- Estimaciones y Pruebas de Hipotesis ---------------------------------
#-------------------------------------------------------------------------------
# Con fines de continuar el ejercicio suponemos que
# fitcll2 es el mejor modelo por tener menor AIC
fit <- fitcll2
summary(Datos)
summary(fit)
b1 <- fit$coefficients[1]
b2 <- fit$coefficients[2]
b3 <- fit$coefficients[3]
b4 <- fit$coefficients[4]
b5 <- fit$coefficients[5]
b6 <- fit$coefficients[6]
b7 <- fit$coefficients[7]
b8 <- fit$coefficients[8]
b9 <- fit$coefficients[9]
propA <- function(x) 1-exp(x^b4*(-exp(b1 + b5*log(x)^2)))
propB <- function(x) 1 - exp(x^(b4+b6) * (-exp(b1 + b2 + (b5+b8)*log(x)^2 )))
propC <- function(x) 1 - exp(x^(b4+b7) * (-exp(b1 + b3 + (b5+b9)*log(x)^2 )))
# Grafica de proporcion de insectos muertos
ggplot(data = datos, mapping = aes(x = Deposit, y = propkilled, group=Insecticide)) +
geom_point(size=5,alpha = 1, aes(color = Insecticide)) +
geom_line(size=3, alpha = 1, aes(color = Insecticide)) +
ggtitle("Letalidad de insecticidas en diferentes dosis") +
ylab("Proporción de mosquitos muertos") +
xlab("Dosis (mg)") +
geom_function(fun = propA, colour = "red", size=3) +
geom_function(fun = propB, colour = "green", size=3) +
geom_function(fun = propC, colour = "blue", size=3)
fit <- fitlogit2
summary(Datos)
summary(fit)
b1 <- fit$coefficients[1]
b2 <- fit$coefficients[2]
b3 <- fit$coefficients[3]
b4 <- fit$coefficients[4]
b5 <- fit$coefficients[5]
b6 <- fit$coefficients[6]
b7 <- fit$coefficients[7]
b8 <- fit$coefficients[8]
b9 <- fit$coefficients[9]
propA <- function(x) 1-exp(x^b4*(-exp(b1 + b5*log(x)^2)))
propB <- function(x) 1 - exp(x^(b4+b6) * (-exp(b1 + b2 + (b5+b8)*log(x)^2 )))
propC <- function(x) 1 - exp(x^(b4+b7) * (-exp(b1 + b3 + (b5+b9)*log(x)^2 )))
# Grafica de proporcion de insectos muertos
ggplot(data = datos, mapping = aes(x = Deposit, y = propkilled, group=Insecticide)) +
geom_point(size=5,alpha = 1, aes(color = Insecticide)) +
geom_line(size=3, alpha = 1, aes(color = Insecticide)) +
ggtitle("Letalidad de insecticidas en diferentes dosis") +
ylab("Proporción de mosquitos muertos") +
xlab("Dosis (mg)") +
geom_function(fun = propA, colour = "red", size=3) +
geom_function(fun = propB, colour = "green", size=3) +
geom_function(fun = propC, colour = "blue", size=3)
x <- 5
1 - exp(x^b4 * (-exp(b1 + b5*log(x)^2 )))
fit <- fitprobit2
summary(Datos)
summary(fit)
b1 <- fit$coefficients[1]
b2 <- fit$coefficients[2]
b3 <- fit$coefficients[3]
b4 <- fit$coefficients[4]
b5 <- fit$coefficients[5]
b6 <- fit$coefficients[6]
b7 <- fit$coefficients[7]
b8 <- fit$coefficients[8]
b9 <- fit$coefficients[9]
propA <- function(x) 1 - exp(x^b4 * (-exp(b1 + b5*log(x)^2 )))
propB <- function(x) 1 - exp(x^(b4+b6) * (-exp(b1 + b2 + (b5+b8)*log(x)^2 )))
propC <- function(x) 1 - exp(x^(b4+b7) * (-exp(b1 + b3 + (b5+b9)*log(x)^2 )))
# Grafica de proporcion de insectos muertos
ggplot(data = datos, mapping = aes(x = Deposit, y = propkilled, group=Insecticide)) +
geom_point(size=5,alpha = 1, aes(color = Insecticide)) +
geom_line(size=3, alpha = 1, aes(color = Insecticide)) +
ggtitle("Letalidad de insecticidas en diferentes dosis") +
ylab("Proporción de mosquitos muertos") +
xlab("Dosis (mg)") +
geom_function(fun = propA, colour = "red", size=3) +
geom_function(fun = propB, colour = "green", size=3) +
geom_function(fun = propC, colour = "blue", size=3)
#-------------------------------------------------------------------------------
#-------------------------------------------------------------------------------
#--------- Estimaciones y Pruebas de Hipotesis ---------------------------------
#-------------------------------------------------------------------------------
# Con fines de continuar el ejercicio suponemos que
# fitcll2 es el mejor modelo por tener menor AIC
fit <- fitcll2
b1 <- fit$coefficients[1]
b2 <- fit$coefficients[2]
b3 <- fit$coefficients[3]
b4 <- fit$coefficients[4]
b5 <- fit$coefficients[5]
b6 <- fit$coefficients[6]
b7 <- fit$coefficients[7]
b8 <- fit$coefficients[8]
b9 <- fit$coefficients[9]
propA <- function(x) 1 - exp(x^b4 * (-exp(b1 + b5*log(x)^2 )))
propB <- function(x) 1 - exp(x^(b4+b6) * (-exp(b1 + b2 + (b5+b8)*log(x)^2 )))
propC <- function(x) 1 - exp(x^(b4+b7) * (-exp(b1 + b3 + (b5+b9)*log(x)^2 )))
# Grafica de proporcion de insectos muertos
ggplot(data = datos, mapping = aes(x = Deposit, y = propkilled, group=Insecticide)) +
geom_point(size=5,alpha = 1, aes(color = Insecticide)) +
geom_line(size=3, alpha = 1, aes(color = Insecticide)) +
ggtitle("Letalidad de insecticidas en diferentes dosis") +
ylab("Proporción de mosquitos muertos") +
xlab("Dosis (mg)") +
geom_function(fun = propA, colour = "red", size=3) +
geom_function(fun = propB, colour = "green", size=3) +
geom_function(fun = propC, colour = "blue", size=3)
